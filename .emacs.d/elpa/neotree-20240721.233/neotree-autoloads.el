;;; neotree-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from neotree.el

(autoload 'neotree-find "neotree" "\
Quick select node which specified PATH in NeoTree.
If path is nil and no buffer file name, then use DEFAULT-PATH,

(fn &optional PATH DEFAULT-PATH)" t)
(autoload 'neotree-projectile-action "neotree" "\
Integration with `Projectile'.

Usage:
    (setq projectile-switch-project-action 'neotree-projectile-action).

When running `projectile-switch-project' (C-c p p), `neotree' will change root
automatically." t)
(autoload 'neotree-toggle "neotree" "\
Toggle show the NeoTree window." t)
(autoload 'neotree-show "neotree" "\
Show the NeoTree window." t)
(autoload 'neotree-hide "neotree" "\
Close the NeoTree window." t)
(autoload 'neotree-dir "neotree" "\
Show the NeoTree window, and change root to PATH.

(fn PATH)" t)
(defalias 'neotree 'neotree-show "\
Show the NeoTree window.")
(register-definition-prefixes "neotree" '("neo" "off-p"))

;;; End of scraped data

(provide 'neotree-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; neotree-autoloads.el ends here
