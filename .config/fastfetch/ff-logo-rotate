#!/usr/bin/env bash

# FastFetch configuration
fastfetch_dir="$HOME/.config/fastfetch"
config_file="$fastfetch_dir/config.jsonc"
logos=($(ls "$fastfetch_dir/logos"/*.txt))
num_logos=${#logos[@]} # Number of logos

# File paths
data_dir="$HOME/.local/share/fastfetch-logos"
mkdir -p "$data_dir" # Ensure the directory exists
unused_file="$data_dir/unused.txt"
used_file="$data_dir/used.txt"

# Function: Reset the files
reset_files(){
    ls "${logos[@]}" > "$unused_file"
    :> "$used_file"
}

# Function: Pick random logo from unused.txt
pick_random_logo(){
    local line_count
    line_count=$(wc -l < "$unused_file")
    local random_index=$(((RANDOM % line_count) + 1))
    local selected_logo
    selected_logo=$(sed -n "${random_index}p" "$unused_file")

    echo "$selected_logo" >> "$used_file"
    sed -i "${random_index}d" "$unused_file"

    # Replace "$HOME" with "~"
    local config_logo_path="${selected_logo/$HOME/~}"

    # Update the config file
    sed -i "s|\"source\": \".*\"|\"source\": \"$config_logo_path\"|" "$config_file"

    # Call the fastfetch CLI
    fastfetch
}

# Function: Sync unused.txt by removing used logos
sync_unused(){
    ls "${logos[@]}" > "$unused_file"
    grep -v -f "$used_file" "$unused_file" > "$data_dir/temp.txt" && mv "$data_dir/temp.txt" "$unused_file"
}

# ----- Main Logic -----

# Check if the files exist
if [ ! -f "$unused_file" ] || [ ! -f "$used_file" ]; then
    reset_files
fi

# Calculate total lines
line_count_unused=$(wc -l < "$unused_file")
line_count_used=$(wc -l < "$used_file")
total_line=$((line_count_unused + line_count_used))

# If some logos are not tracked, sync
if [ "$num_logos" -ne "$total_line" ]; then
    sync_unused
fi

# If unused.txt is empty, reset the files
if [ -s "$unused_file" ]; then
    reset_files
fi

# Pick a random logo
pick_random_logo
